
public class Ex401 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
/*
 1. 용어정의
 	- 연산 : 프로그램에서 데이터를 처릴할 때 결과를 산출하는 것
 	- 연산자 : 연산에 사용되는 표시나 기호
 	- 피연산자 : 연산되는 데이터
 	- 연산식 : 연산자와 피연산자를 이용하여 연산의 과정을 기술한 것
 	
 	ex) 산술 연산자 : byte, short, int, long, float, double => 숫자 타입
 		비교 연산자와 논리 연산자 : <, >, <=, >=,	 !, &, |, &&, || => 논리(boolean) 타입
 		
 2. 자바에서 제공하는 다양한 연산자
 
 =================================================================================
 연산자 종류	연산자					피연산자		산출값		기능 설명
 ---------------------------------------------------------------------------------
 산술			+, -, *, /, %			이항			숫자			사칙연산 및 나머지 연산
 부호			+, -					단항			숫자			음수와 양수의 부호
 문자열		+						이항			문자열		두 문자열을 연결
 대입		=, +=, -=, /=, %=,			이항			다양			우변의 값을 좌변의 변수에 대입
 		*=, &=, ^=, !=, <<=,
 		>>=, >>>=
 		ex) int result += 10;  == int result = result + 10;
 증감			++, --					단항			숫자			1만큼 증가/감소
 			ex) int a= 1;
 				++a; a++; 
 비교			==, !=, >, <, >=, <=	이항			boolean		값의 비교
 			instanceof
 논리			!, &, |, &&, ||			단항, 이항		boolean		논리적 NOT, AND, OR 연산
 조건			(조건식)?A:B				심항			다양			조건에 따라 A 또는 B 중 하나를 선택
 비트			~, &, |, ^				단항, 이항		숫자,boolean	비트 NOT, AND, OR, XOR 연산
 쉬프트		>>, <<, >>>				이항			숫자			비트를 좌측/우측을 밀어서 이동
 
 
 3. 연산의 방향과 우선순위
 
 ==================================================================================
 연산자											연산 방향					우선순위
 ----------------------------------------------------------------------------------
 증감(++, --), 부호(+,-), 비트(~), 논리(!)			<--------				높음
 산술(*,/,%)										-------->
 산술(+,-)										-------->
 쉬프트(<<, >>, >>)								-------->
 비교(<,>,<=,>=, instanceof)						-------->
 비교(==, !=)										-------->
 논리(&)											-------->
 논리(^)											-------->
 논리(|)											-------->
 논리(&&)											-------->
 논리(||)											-------->
 조건(?:)											-------->
 대입(=, +=, -=, *=, /=, %=, &=, |=, ^=, !=, 		<--------				낮음
 	 <<=, >>=, >>>=)
 	 
 	 ex) int var1 =1;
 	 	 int var2 =3;
 	 	 int var3 =2;
 	 	 
 	 	 int result = var1 + var2 * var3; (곱하기 먼저 계산하고 더하기)
 	 	 
  4. 연산방향과 우선순위 정리
  	- 단항, 이항, 삼항 연산자 순으로 우선순위를 가진다.
  	- 산술, 비교, 논리, 대입 연산자 순으로 우선순위를 가진다.
  	- 단항과 대입 연산을 제외한 모든 연산의 방향은 왼쪽에서 오른쪽이다.(->)
  	- 복잡한 연산식에는 괄호()를 사용해서 우선순위를 정해준다.
 */
 
	}

}
